{"map":"{\"version\":3,\"sources\":[\"/home/andi/Documents/Code/knjiznica2/react-frontend/src/Knjigasifra.js\",\"/home/andi/Documents/Code/knjiznica2/react-frontend/src/serviceWorker.js\",\"/home/andi/Documents/Code/knjiznica2/react-frontend/src/index.js\",\"/home/andi/Documents/Code/knjiznica2/react-frontend/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/home/andi/Documents/Code/knjiznica2/react-frontend/src/logo.svg\"],\"names\":[\"Knjigasifra\",\"react_default\",\"a\",\"createElement\",\"className\",\"src\",\"logo\",\"alt\",\"window\",\"knjiga\",\"Component\",\"Boolean\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"App_default\",\"document\",\"getElementById\",\"src_Knjigasifra\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\",\"module\",\"exports\",\"__webpack_require__\",\"p\"],\"mappings\":\"wQAeeA,mLAXX,OACEC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAA,CAAQC,UAAU,sBAChBH,EAAAC,EAAAC,cAAA,MAAA,CAAKE,IAAKC,EAAAA,EAAMF,UAAU,mBAAmBG,IAAI,SACjDN,EAAAC,EAAAC,cAAA,IAAA,KAAA,kBAAmBK,OAAOC,OAA1B,cANgBC,EAAAA,WCUNC,QACW,cAA7BH,OAAOI,SAASC,UAEe,UAA7BL,OAAOI,SAASC,UAEhBL,OAAOI,SAASC,SAASC,MACvB,2DCVNC,EAAAA,EAASC,OAAOf,EAAAC,EAAAC,cAACc,EAAAf,EAAD,MAASgB,SAASC,eAAe,SACjDJ,EAAAA,EAASC,OAAOf,EAAAC,EAAAC,cAACiB,EAAD,MAAiBF,SAASC,eAAe,UDwHnD,kBAAmBE,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,46FEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB\",\"sourcesContent\":[\"import React, { Component } from 'react';\\nimport logo from './logo.svg';\\nclass Knjigasifra extends Component {\\n  render() {\\n    return (\\n      <div className=\\\"Knjigasifra\\\">\\n        <header className=\\\"Knjigasifra-header\\\">\\n          <img src={logo} className=\\\"Knjigasifra-logo\\\" alt=\\\"logo\\\" />\\n          <p> Moja knjiga = {window.knjiga} </p>\\n        </header>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default Knjigasifra;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport Knjigasifra from './Knjigasifra';\\n\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\nReactDOM.render(<Knjigasifra />, document.getElementById('root1'));\\n\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\",\"module.exports = __webpack_public_path__ + \\\"media/logo.5d5d9eef.svg\\\";\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{10:function(e,n,o){e.exports=o(17)},16:function(e,n,o){},17:function(e,n,o){\"use strict\";o.r(n);var a=o(0),t=o.n(a),m=o(1),r=o.n(m),i=(o(16),o(3)),d=o.n(i),s=o(4),c=o(5),l=o(8),b=o(6),u=o(9),j=o(7),p=o.n(j),f=function(e){function n(){return Object(s.a)(this,n),Object(l.a)(this,Object(b.a)(n).apply(this,arguments))}return Object(u.a)(n,e),Object(c.a)(n,[{key:\"render\",value:function(){return t.a.createElement(\"div\",{className:\"Knjigasifra\"},t.a.createElement(\"header\",{className:\"Knjigasifra-header\"},t.a.createElement(\"img\",{src:p.a,className:\"Knjigasifra-logo\",alt:\"logo\"}),t.a.createElement(\"p\",null,\" Moja knjiga = \",window.knjiga,\" \")))}}]),n}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(t.a.createElement(d.a,null),document.getElementById(\"root\")),r.a.render(t.a.createElement(f,null),document.getElementById(\"root1\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},3:function(e,n){throw new Error(\"Module build failed (from ./node_modules/babel-loader/lib/index.js):\\nSyntaxError: /home/andi/Documents/Code/knjiznica2/react-frontend/src/App.js: Unexpected token (4:11)\\n\\n\\x1b[0m \\x1b[90m 2 | \\x1b[39m\\x1b[36mimport\\x1b[39m logo from \\x1b[32m'./logo.svg'\\x1b[39m\\x1b[33m;\\x1b[39m\\x1b[0m\\n\\x1b[0m \\x1b[90m 3 | \\x1b[39m\\x1b[36mimport\\x1b[39m \\x1b[32m'./App.css'\\x1b[39m\\x1b[33m;\\x1b[39m\\x1b[0m\\n\\x1b[0m\\x1b[31m\\x1b[1m>\\x1b[22m\\x1b[39m\\x1b[90m 4 | \\x1b[39m\\x1b[36mimport\\x1b[39m json\\x1b[33m;\\x1b[39m\\x1b[0m\\n\\x1b[0m \\x1b[90m   | \\x1b[39m           \\x1b[31m\\x1b[1m^\\x1b[22m\\x1b[39m\\x1b[0m\\n\\x1b[0m \\x1b[90m 5 | \\x1b[39m\\x1b[0m\\n\\x1b[0m \\x1b[90m 6 | \\x1b[39m\\x1b[36mclass\\x1b[39m \\x1b[33mApp\\x1b[39m \\x1b[36mextends\\x1b[39m \\x1b[33mComponent\\x1b[39m {\\x1b[0m\\n\\x1b[0m \\x1b[90m 7 | \\x1b[39m  constructor()\\x1b[0m\\n    at Object.raise (/home/andi/Documents/Code/knjiznica2/react-frontend/node_modules/@babel/parser/lib/index.js:3831:17)\\n    at Object.unexpected (/home/andi/Documents/Code/knjiznica2/react-frontend/node_modules/@babel/parser/lib/index.js:5143:16)\\n    at Object.expectContextual (/home/andi/Documents/Code/knjiznica2/react-frontend/node_modules/@babel/parser/lib/index.js:5115:41)\\n    at Object.parseImport (/home/andi/Documents/Code/knjiznica2/react-frontend/node_modules/@babel/parser/lib/index.js:8565:12)\\n    at Object.parseStatementContent (/home/andi/Documents/Code/knjiznica2/react-frontend/node_modules/@babel/parser/lib/index.js:7341:27)\\n    at Object.parseStatement (/home/andi/Documents/Code/knjiznica2/react-frontend/node_modules/@babel/parser/lib/index.js:7243:17)\\n    at Object.parseStatement (/home/andi/Documents/Code/knjiznica2/react-frontend/node_modules/@babel/parser/lib/index.js:1977:26)\\n    at Object.parseBlockOrModuleBlockBody (/home/andi/Documents/Code/knjiznica2/react-frontend/node_modules/@babel/parser/lib/index.js:7810:25)\\n    at Object.parseBlockBody (/home/andi/Documents/Code/knjiznica2/react-frontend/node_modules/@babel/parser/lib/index.js:7797:10)\\n    at Object.parseTopLevel (/home/andi/Documents/Code/knjiznica2/react-frontend/node_modules/@babel/parser/lib/index.js:7181:10)\\n    at Object.parseTopLevel (/home/andi/Documents/Code/knjiznica2/react-frontend/node_modules/@babel/parser/lib/index.js:2802:28)\\n    at Object.parse (/home/andi/Documents/Code/knjiznica2/react-frontend/node_modules/@babel/parser/lib/index.js:8660:17)\\n    at parse (/home/andi/Documents/Code/knjiznica2/react-frontend/node_modules/@babel/parser/lib/index.js:10660:38)\\n    at parser (/home/andi/Documents/Code/knjiznica2/react-frontend/node_modules/@babel/core/lib/transformation/normalize-file.js:170:34)\\n    at normalizeFile (/home/andi/Documents/Code/knjiznica2/react-frontend/node_modules/@babel/core/lib/transformation/normalize-file.js:138:11)\\n    at runSync (/home/andi/Documents/Code/knjiznica2/react-frontend/node_modules/@babel/core/lib/transformation/index.js:44:43)\")},7:function(e,n,o){e.exports=o.p+\"media/logo.5d5d9eef.svg\"}},[[10,1,2]]]);","extractedComments":[]}